#summary Technical documentation on Ares and related

== Where? ==

The source code of Ares is located at [http://code.google.com/p/ares/]. Check the [AresBuilding building page] for more information on how to compile Ares.

== Architecture ==

Check the [Architecture] page for more information about the CS/CEL/Ares architecture.

== Project Structure ==

 * Applications:
    * Aresed: the world editor.
    * Ares: the game player.

 * Plugins:
    * CurveMesh: this plugin is responsible for curved meshes. Specifically used by the road for example.
    * DynWorld: this plugin handles the 'Big World'. It supports physics (and the ability to reuse/cache rigid bodies for objects out of view) and fading in/out objects when they are too far. ''[kickvb: this along with many physical effects are also covered on the GSOC on physics & collisions. The plan was to made this a functionality of CS.]''
    * DynWorldLoad: the loader plugin for Dynworld.
    * Nature: nature plugin. Responsible for natural things like day/night transition, weather and (in the future) foliage handling.

== Data and Assets ==

In this section I explain the various bits of data and assets that are used and/or created by Ares and AresEd. This is likely to change in the future.

 * Predefined CS Meshes and Materials (''data/factories/genBox''): this is a temporary file that is loaded by both Ares and AresEd and contains a few preset factories and materials. This file is likely to go away in the future when AresEd itself will be capable of loading new assets.
 * Plants (''data/pt_plants.zip''): this contains a few plants that were taken from Peragro Tempus. This file is included by ''genBox'' and will also go away when AresEd has proper asset management.
 * Node factory (''data/node.zip''): this contains a mesh for representing a 'node' as used by the curve editor.
 * Meshes and stuff (''data/rack.zip''): this oddly named file contains most of the mesh factories as used by Ares and AresEd. This file is likely to go away in the future when AresEd will be capable of loading new assets.
 * DynWorld factory definitions (''data/dynworldFactories.xml''): this is a standard CS/XML library file which uses the DynWorldLoad addon to define all the possible objects to be used by AresEd and Ares. This file is currently hand-generated and defines the possible set of objects (including curved objects and NPC's) that are possible to use in the game. In the future it would be great if AresEd would also allow the editing of this. This is not very hard. It just requires a way to define additional Dynamic Object Factories from inside AresEd by importing a CS Mesh Factory (as generated by blender2crystal for example).
 * Landscape (''data/landscape/...''): this is the landscape as currently used by Ares and AresEd. This will also go away in the future when AresEd is capable of editing its own terrain.
 * River (''data/river.zip''): this is the river mesh and is included by the landscape above. This will go away as well.
 * Test World (''data/saves/testworld''): this is the current standard test world as it was made by AresEd and saved. This file is input to the DynWorld plugin and defines the actual world as it was created by the user of AresEd. This file is likely to be expanded a lot when new features are added to AresEd. In the future it will also refer to the loaded assets so that many of the files above can be obsoleted.

== Property Classes ==

Here is a list of property classes in CEL that are potentially useful for defining Ares objects. There are many more property classes but the ones listed here are certainly useful for this project:

 * [PCInventory Inventory Property Class]: manages the inventory of the player and other containers.
 * [PCSpawn Spawn Property Class]: define a spawning point for new entities.
 * [PCQuest Quest Property Class]: associates a quest with a given entity.
 * [PCWire Wire Property Class]: allows _wiring_ messages from one source to some target.
 * [PCProperties Properties Property Class]: property class holding general variables and attributes.


Back to [MainPage]